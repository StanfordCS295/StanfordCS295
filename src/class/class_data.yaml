start_date: 2023/04/03
class_days:
  - Monday
  - Wednesday
assignment_due_time: 23:59

instructors:
  - name: Akshay Srivatsan
    role: Instructor
    email: akshay01@stanford.edu
    image: /img/akshay.jpg
    officeHours:
      - when: 'Thursdays, 10am-12pm'
        where: 'at/around Gates 478 and on Zoom'
        url: 'https://stanford.zoom.us/j/99823963312?pwd=ZC96NlZodEg5NldTT0JIcCtCZElWdz09'
  - name: Ayelet Drazen
    role: Instructor
    email: adrazen@stanford.edu
    image: /img/ayelet.jpg
    officeHours:
      - when: Mondays, 3-4pm
        where: in Huang Basement
        # url: 'TBD'
      - when: Tuesdays, 8-9pm
        where: on Zoom
        url: https://stanford.zoom.us/j/2035566567?pwd=VXpjbENSY296Z1c0RDlmbytSSHMvZz09
  - name: Jonathan Kula
    role: Instructor
    email: jdkula@stanford.edu
    image: /img/jonathan.jpg
    officeHours:
      - when: 'Wednesdays 3:30 to class time'
        where: '260-001'
      - when: 'Tuesdays, 5-6pm'
        where: 'on Zoom'
        url: 'https://stanford.zoom.us/j/99170211188?pwd=RytTUlNVVGZhMVJVMGFMY093ek9pQT09'

assignments:
  - name: 'Assignment 0: Getting Set Up!'
    points: 1
    due: 2023/04/12
    materials:
      handout: '/assignments/assign0'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2790820'
    details: |-
      This short assignment is meant to get a basic Unix-compatible shell environment set up on your computer.  We'll do this together in class during the first lecture.
  - name: 'Assignment 1: _Shell_ We?'
    points: 3
    due: 2023/04/19
    materials:
      handout: '/assignments/assign1'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2816069'
    details: |-
      This assignment consists of two different components:
        1. You’ll familiarize yourself with RegEx by completing a few exercises
        2. You’ll combine your RegEx and shell expertise to wrangle some words
  - name: 'Assignment 2: Bourne to Be Wild'
    points: 3
    due: 2023/04/26
    materials:
      handout: '/assignments/assign2'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2836843'
    details: |-
      This assignment consists of two different components:
        1. You'll write a simple shell script that does some data analysis
        2. You’ll get some practice using vim
  - name: 'Assignment 3: Off The Beaten `$PATH`'
    points: 3
    due: 2023/05/03
    materials:
      handout: '/assignments/assign3'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2854819'
    details: |-
      This assignment consists of three different components:

        1. You will modify your `$PATH` variable, shell prompt, and add aliases
        2. You'll get some practice using the networking tools we learned about in Lecture 8
        3. You'll run a small server that our grading machine will connect to
  - name: "Assignment 4: It's `git`-ting HOT in here!"
    points: 3
    due: 2023/05/10
    materials:
      handout: '/assignments/assign4'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2873836'
    details: |-
      This assignment consists of three different components:

        1. Do a Git tutorial
        2. Practice using Git from the command line
        3. Practice using GitHub
  - name: 'Assignment 5: It all `make`s sense!'
    points: 3
    due: 2023/05/17
    materials:
      handout: '/assignments/assign5'
      gradescope: 'https://www.gradescope.com/courses/527944/assignments/2891087'
    details: |-
      This assignment consists of two different components:

      1. Practice using `make` and CI tools
      2. Practice with profiling tools
  - name: 'Assignment 6: The (Public) Key to My Heart'
    points: 3
    due: 2023/05/24
    materials:
    details:
  - name: "Assignment 7: It's like Magick"
    points: 3
    due: 2023/05/31
    materials:
    details:
  - name: 'Assignment 8: On Cloud Nine'
    points: 3
    due: 2023/06/07
    materials:
    details:
  - name: 'Final Project'
    points: 5
    due: 2023/06/09
    materials:
    details:

lectures:
  # Week 1
  - topic: 'Lecture 1: Course Overview'
    materials:
      slides: '/lectures/1-introduction.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=9d9ca2f2-b5b4-4e3d-a31a-afda00707ffb'
      assignment 0: '/assignments/assign0'
    details: |-
      We covered basic class logistics (also available on the [course info page](/course_info)), and did [Assignment 0](/assignments/assign0) to get everyone set up.
  - topic: 'Lecture 2: The Shell and Shell Tools'
    materials:
      slides: '/lectures/2-shell-tools.pdf'
      notes: '/lectures/2-shell-tools.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=8bdcb40f-3f50-472c-ac69-afdc00252948'
    details: |-
      We defined what "the shell" is, went over the history/background of the UNIX operating system and the shell as we know it today, and covered how to use basic shell commands.

      Useful Resources:
        * `man` pages (the system manual)
        * [cheat.sh](https://cheat.sh)
        * [devhints.io/bash](https://devhints.io/bash)

      I used a non-standard command `bat` in my lecture demo; the software installation page contains installation instructions if you want to try it out.

  # Week 2
  - topic: 'Lecture 3: Data Manipulation'
    materials:
      slides: '/lectures/3-data-wrangling.pdf'
      notes: '/lectures/3-data-wrangling.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=e1d128c5-2942-4b01-bfc0-afe3013b4f82'
    details: |-
      We will learn how to efficiently process large datasets (or any other text-based data) from the shell using tools like regular expressions.

      There's a great regular expression debugger at [regex101](https:/regex101.com).
  - topic: 'Lecture 4: Shell Scripting'
    materials:
      slides: '/lectures/4-shell-scripting.pdf'
      notes: '/lectures/4-shell-scripting.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=c175c09c-496e-40b4-a2f8-afe400017d07'
      assignment 1: '/assignments/assign1'
    details: |-
      We will learn how to write our own "scripts"—mini-programs that combine shell commands.
    assignments: Assignment 0 Due

  # Week 3
  - topic: 'Lecture 5: Text Editors'
    materials:
      slides: '/lectures/5-text-editors.pdf'
      notes: '/lectures/5-text-editors.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=bc6f1c14-a930-431e-ba0f-afe90087c2d4'
    details: |-
      We will compare and contrast different programs commonly used to edit code; namely, the terminal editor vim and the graphical IDE (integrated development environment) Visual Studio Code.
  - topic: 'Lecture 6: Command Line Environment'
    materials:
      slides: '/lectures/6-command-line-environment.pdf'
      notes: '/lectures/6-command-line-environment.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=9d3e6e6a-0f78-453c-b190-afea00193bfb'
      assignment 2: '/assignments/assign2'
    details: |-
      We will delve in more detail into the environment command-line programs run within, including:
        * how we configure programs
        * how programs find data (the filesystem)
        * how we can run multiple programs at the same time

      We will also cover a terminal multiplexer called `tmux`; be sure to install it using [the instructions on the software page](/software)
    assignments: Assignment 1 Due

  # Week 4
  - topic: 'Lecture 7: Compilers and Package Management'
    materials:
      slides: '/lectures/7-compilers.pdf'
      notes: '/lectures/7-compilers.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=d2a0af32-23e7-4505-b8c3-aff1004c1d2e'
    details: |-
      We will see two related concepts:
        * how source code (in C and Python) is turned into a program
        * how we can install programs shared by other people
  - topic: 'Lecture 8: Computer Networking'
    details: |-
      We will learn how computers talk to one another across the internet.
    materials:
      slides: '/lectures/8-networking.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=ef14a39d-590d-42df-9726-aff5018578bb'
      assignment 3: '/assignments/assign3'
    assignments: Assignment 2 Due

  # Week 5
  - topic: 'Lecture 9: Version Control I'
    details: |-
      We will learn how to keep track of, switch between, and merge different versions of our code using the popular version control system `git`.
    materials:
      slides: '/lectures/9-version-control.pdf'
      notes: '/lectures/9-version-control.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=579b269d-0f0d-410a-a504-aff60182b250'
  - topic: 'Lecture 10: Version Control II'
    materials:
      slides: '/lectures/10-version-control.pdf'
      notes: '/lectures/10-version-control.notes.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=ef8803a6-3073-47a8-9679-affc01263458'
      assignment 4: '/assignments/assign4'
    details: |-
      We will learn how to collaborate with others using `git` and GitHub.
    assignments: Assignment 3 Due

  # Week 6
  - topic: 'Lecture 11: Build Systems & DevOps'
    materials:
      slides: '/lectures/11-ci-cd.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=d094016c-acf4-41a1-af0d-affd00c90e07'
    details: |-
      We will learn how to set up a system that can automatically compile, test, and deploy our code.
  - topic: 'Lecture 12: Debugging and Profiling'
    materials:
      slides: '/lectures/12-debugging-profiling.pdf'
      lecture video: 'https://stanford-pilot.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=baf14927-eb28-4c81-ac4a-b000004bacbe'
      assignment 5: '/assignments/assign5'
    details: |-
      We will cover common debugging strategies and various static analysis tools that can be used to make programming easier.
    assignments: Assignment 4 Due

  # Week 7
  - topic: 'Lecture 13: Security'
    details: |-
      We will introduce the concept of computer security, including different types of attacks you might see in the real world (and strategies to protect yourself from them).
  - topic: 'Lecture 14: Cryptography'
    details: |-
      We will see real-world tools used to verify people's identity and keep data secure even in untrustworthy settings (like the internet).
    assignments: Assignment 5 Due

  # Week 8
  - topic: 'Lecture 15: Virtual Machines & Containers'
    details: |-
      We will set up and run virtual computers on your real computers, both for security and for ease of software development and deployment.
  - topic: 'Lecture 16: Cloud & Serverless'
    details: |-
      We will set up a connection to a computer running on a "cloud" service, such as Amazon AWS, Google GCP, or Microsoft Azure, and run our own code on it.  We will also set up a simpler service using a "serverless" platform, which is a convenient way of deploying code without much work.
    assignments: Assignment 6 Due

  # Week 9
  - topic: 'No Lecture: Memorial Day'
    holiday: yes
  - topic: 'Lecture 17: Media Processing'
    details: |-
      We will look at how different types of media (images, audio, and video) are represented by computers, including the tradeoffs of different formats and tools to convert between them.
    assignments: Assignment 7 Due

  # Week 10
  - topic: 'Lecture 18: Student-Chosen Topics'
    details: |-
      Whatever topics you find interesting!  Let us know what you want us to cover.
  - topic: 'Lecture 19: Conclusion'
    assignments: Assignment 8 Due
